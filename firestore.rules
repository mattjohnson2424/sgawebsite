rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  	///// FUNCTIONS /////
  	function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.owner == true
    }
    
    function isAdmin() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.admin == true
    }
    
    function isExec() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.exec == true
    }

    function isOfficer() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.officer == true
    }

		// Announcements
    match /announcements/{announcementId} {
    	allow read: if isSignedIn();
      allow write: if isSignedIn() && isExec();
    }
    
    // Bios
    match /bios/{bioId} {
    	allow read: if isSignedIn();
      allow write: if isSignedIn() && isExec();
    }
    
    // Calendar
    match /calendar/{calendarId} {
    	allow read: if isSignedIn();
      allow write: if isSignedIn() && isAdmin();
    }
    
    // Errors
    match /errors/{errorId} {
    	allow read, write: if false;
    }
    
    // Users
    match /users/{userId} {
    	allow read: if isAdmin() || userId == request.auth.uid;
      allow create, delete: if false;
      allow update: if isSignedIn() && userId == request.auth.uid && 
      	(
        	request.resource.data.diff(resource.data).affectedKeys()
        		.hasAny(['allowText', 'phone', 'formattedPhone', 'theme'])
        );
    }
    
    // Events
    match /events/{eventId} {
    	allow read: if isSignedIn();
      allow create, delete: if isSignedIn() && isExec()
      allow update: if isSignedIn() && 
      (
      	isExec() || 
        (	isOfficer() && 
        	request.resource.data.diff(resource.data).affectedKeys().hasOnly(['attendance'])
        )) || 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['signUps'])
    }

    // Help
    match /help/{helpId} {
    	allow read, write: if isSignedIn()
    }
    
    // Transfers
    match /transfers/{transferId} {
    	allow read: if isOwner() || isAdmin();
      allow write: if false;
    }
    
  }
}